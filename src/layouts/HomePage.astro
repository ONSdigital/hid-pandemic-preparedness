---
import { getLiveStory } from "@storyblok/astro";
import BaseLayout from "@layouts/BaseLayout.astro";

// Interfaces
import type { QuickLinksProps } from "@components/Home/QuickLinks/QuickLinks.interface";
import type { NavItem } from "@src/types/NavItem";

// Components
import { Header } from "@components/Organisms/Home/Header/Header";
import { QuickLinks } from "@components/Home/QuickLinks/QuickLinks";
import { DynamicComponent } from "@src/components/DynamicComponent";

// Helpers
import { buildBreadcrumbs } from "@/src/helpers/buildBreadcrumbs";
import { fetchStory } from "@/src/helpers/fetchContent";

// Content
import navBarData from "@content/base/navBarData.json";

let story = null;

const liveStory = await getLiveStory(Astro);

if (liveStory) {
  story = liveStory;
} else {
  const { data } = await fetchStory("home");
  story = data?.story;
}

// Build breadcrumbs
const breadcrumbs = await buildBreadcrumbs(story.full_slug);

// Ref learning resources data from `navBarData` for rendering as quick links
const quickLinksData: QuickLinksProps = {
  title: navBarData.items[1].label,
  navItems: navBarData.items[1].children as NavItem[],
};
---

<BaseLayout>
  <main>
    <Header
      {...story.content.Header[0]}
      breadcrumbs={breadcrumbs}
      client:visible
    />
    <QuickLinks {...quickLinksData} />
    {story.content.Middle.map((blok: any) => <DynamicComponent blok={blok} />)}
    {story.content.Bottom.map((blok: any) => <DynamicComponent blok={blok} />)}
  </main>
</BaseLayout>
