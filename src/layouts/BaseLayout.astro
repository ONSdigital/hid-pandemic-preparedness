---
import { getLiveStory } from "@storyblok/astro";

// Components
import { Footer } from "@components/Organisms/Footer/Footer";
import { NavBar } from "@components/NavBar/NavBar";

// Content
import strings from "@content/base/strings.json";
import footerData from "@content/base/footerData.json";
import navBarData from "@content/base/navBarData.json";

// Css and fonts
import "@styles/index.scss";
import "@fontsource-variable/open-sans";

// Helpers
import { fetchStory } from "@helpers/fetchContent";

interface Props {
  title?: string;
}
const { title } = Astro.props;

let story = null;

const liveStory = await getLiveStory(Astro);

if (liveStory) {
  story = liveStory;
} else {
  const { data } = await fetchStory("footer");
  story = data?.story;
}

console.log("sotrryyy... ", story);
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <script
      src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.8/dist/js/bootstrap.bundle.min.js"
      defer
      is:inline></script>
    <title>{title ? `${strings.title} | ${title}` : strings.title}</title>
  </head>
  <body>
    <header>
      <NavBar {...navBarData} client:load />
    </header>
    <slot />
    <Footer {...footerData} client:load />
  </body>
</html>
