---
import type { ISbStoryData } from "storyblok-js-client";

import BaseLayout from "@layouts/BaseLayout.astro";

// Components
import { Header } from "@/src/components/Organisms/Core/Header/Header";

// Helpers
import { buildBreadcrumbs } from "@/src/helpers/buildBreadcrumbs";
import { fetchStories, fetchStory } from "@/src/helpers/fetchContent";

// SSG paths
export async function getStaticPaths() {
  // Have to define this here as `getStaticPaths` runs before any other Astro runtime api context
  // is assembled
  const folderName: string = "case-studies";
  // Fetch the stories for this folder
  const { data } = await fetchStories({ starts_with: folderName });
  const stories: ISbStoryData[] = data.stories;

  // Build pages based on stories returned for this folder
  return stories.map(({ full_slug, name }) => {
    // Build the correct slug from the returned story
    const slug: string = full_slug.replace(folderName, "");

    return {
      params: { slug },
      props: { name, full_slug },
    };
  });
}

// Build the page context
let name = "";
let full_slug = "";

if (Astro.isPrerendered) {
  ({ name, full_slug } = Astro.props);
} else {
  const { data } = await fetchStory(Astro.url.pathname);
  const story = data?.story;
  if (!story) return Astro.redirect("/404");

  ({ name, full_slug } = story);
}

// Build breadcrumbs
const breadcrumbs = await buildBreadcrumbs(Astro.url.pathname);
---

<BaseLayout>
  <main>
    <Header title={name} breadcrumbs={breadcrumbs} />
    <p>Name: {name}</p>
    <p>Full slug: {full_slug}</p>
  </main>
</BaseLayout>
