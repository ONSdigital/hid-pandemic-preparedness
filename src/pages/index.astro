---
import { v4 as uuidv4 } from "uuid";
import { getLiveStory } from "@storyblok/astro";
import BaseLayout from "@layouts/BaseLayout.astro";

// Interfaces
import type { CarouselProps } from "@components/Core/Carousel/Carousel.interface";
import type { QuickLinksProps } from "@components/Home/QuickLinks/QuickLinks.interface";
import type { DatasourceEntry } from "@src/types/DatasourceEntry";
import type { NavItem } from "@src/types/NavItem";

// Components
import { Carousel } from "@components/Core/Carousel/Carousel";
import { CaseStudies } from "@components/Home/CaseStudies/CaseStudies";
import { Header } from "@components/Organisms/Home/Header/Header";
import { ImageAndText } from "@components/Organisms/Home/ImageAndText/ImageAndText";
import { Impact } from "@src/components/Organisms/Home/Impact/Impact";
import { StrategicPartners } from "@src/components/Organisms/Home/StrategicPartners/StrategicPartners";
import { QuickLinks } from "@components/Home/QuickLinks/QuickLinks";
import { StatisticsAndText } from "@/src/components/Organisms/Home/StatisticsAndText/StatisticsAndText";
import { References } from "@components/Core/References/References";
import { DynamicComponent } from "@src/components/DynamicComponent";

// Helpers
import { fetchDatasourceEntries, fetchStory } from "@/src/helpers/fetchContent";

// Content
import carouselData from "@content/Home/carousel.json";
import caseStudiesData from "@content/Home/caseStudies.json";
import navBarData from "@content/base/navBarData.json";
import referencesData from "@content/Home/references.json";

// Fetch datasource content from api to return content and strings we need
const homeLabel = (await fetchDatasourceEntries(
  "breadcrumb-strings",
  "homeLabel",
)) as DatasourceEntry;

let story = null;

const liveStory = await getLiveStory(Astro);

if (liveStory) {
  story = liveStory;
} else {
  const { data } = await fetchStory("home");
  story = data?.story;
}

// Build breadcrumbs
const breadcrumbs = {
  items: [
    {
      href: "/",
      label: homeLabel.value,
      id: uuidv4(),
    },
  ],
};

console.log(story.content.Middle);

// Ref learning resources data from `navBarData` for rendering as quick links
const quickLinksData: QuickLinksProps = {
  title: navBarData.items[1].label,
  navItems: navBarData.items[1].children as NavItem[],
};
---

<BaseLayout>
  <main>
    <Header
      {...story.content.Header[0]}
      breadcrumbs={breadcrumbs}
      client:visible
    />
    <QuickLinks {...quickLinksData} />
    {
      story.content.Middle.map((blok: any) => (
        <DynamicComponent blok={blok} key={blok._uid} />
      ))
    }
    <Carousel {...carouselData as CarouselProps} client:visible />
    {
      story.content.Bottom.partners.map((blok: any) => (
        <DynamicComponent blok={blok} key={blok._uid} />
      ))
    }
    <References {...referencesData} client:visible />
  </main>
</BaseLayout>
